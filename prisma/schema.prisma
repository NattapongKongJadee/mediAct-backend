datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserRole {
  nurse
  head_nurse
}

enum LeaveStatus {
  pending
  approved
  rejected
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      UserRole @default(nurse)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  assignments    ShiftAssignment[]
  approvedLeaves LeaveRequest[]    @relation("approvedBy")

  createdShifts Shift[]
}

model Shift {
  id        Int      @id @default(autoincrement())
  date      DateTime // ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏õ‡πá‡∏ô Date (‡πÉ‡∏ä‡πâ‡∏ï‡∏≠‡∏ô query ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ß‡∏±‡∏ô)
  startTime DateTime // ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ String "HH:mm:ss" ‡∏Å‡πá‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà DateTime ‡∏ä‡πà‡∏ß‡∏¢ validate ‡∏á‡πà‡∏≤‡∏¢
  endTime   DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  createdById Int
  createdBy   User @relation(fields: [createdById], references: [id], onDelete: Restrict)

  assignments ShiftAssignment[]

  @@unique([date, startTime, endTime]) // ‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô (‡∏Ñ‡∏ß‡∏£‡∏Å‡∏≥‡∏´‡∏ô‡∏î timezone ‡∏ù‡∏±‡πà‡∏á‡πÅ‡∏≠‡∏õ)
  @@index([createdById])
}

model ShiftAssignment {
  id        Int      @id @default(autoincrement())
  userId    Int
  shiftId   Int
   isActive  Boolean  @default(true)   // üëà ‡πÉ‡∏ä‡πâ‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤ assignment ‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏ú‡∏•‡∏≠‡∏¢‡∏π‡πà‡πÑ‡∏´‡∏°
  revokedAt DateTime?                 // üëà ‡πÄ‡∏ß‡∏•‡∏≤/‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  shift  Shift          @relation(fields: [shiftId], references: [id], onDelete: Cascade)
  leaves LeaveRequest[]

  @@unique([userId, shiftId])
  @@index([userId])
  @@index([shiftId])
}

model LeaveRequest {
  id                Int         @id @default(autoincrement())
  shiftAssignmentId Int
  reason            String?
  status            LeaveStatus @default(pending)
  approvedById      Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  assignment ShiftAssignment @relation(fields: [shiftAssignmentId], references: [id], onDelete: Cascade)
  approvedBy User?           @relation("approvedBy", fields: [approvedById], references: [id])

  @@index([shiftAssignmentId])
  @@index([status])
}
